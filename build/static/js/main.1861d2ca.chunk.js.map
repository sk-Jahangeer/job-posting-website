{"version":3,"sources":["components/NavBar.jsx","components/Home.jsx","components/common/Form.js","components/JobForm.jsx","components/NotFound.jsx","App.js","index.js"],"names":["NavBar","AppBar","style","background","position","Toolbar","to","className","src","alt","Button","startIcon","color","variant","Home","state","jobs","loading","sort","handleSortBy","e","value","target","reverse","setState","a","axios","get","process","data","this","setTimeout","console","log","fontWeight","margin","TextField","size","onChange","select","MenuItem","Fragment","map","job","Paper","title","company","experience","salary","location","description","flexWrap","skills","skill","index","Chip","label","_id","square","Skeleton","width","height","varient","Component","Form","handleChange","input","currentTarget","name","handleSubmit","preventDefault","doSubmit","type","placeholder","required","multiline","rows","options","Autocomplete","multiple","event","newValue","originalData","getOptionLabel","option","renderTags","tagValue","getTagProps","renderInput","params","float","JobForm","post","toast","success","window","response","status","error","padding","onSubmit","textAlign","renderAutoCompleteInput","renderSubmitBtn","NotFound","theme","createTheme","palette","primary","main","App","ThemeProvider","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1861d2ca.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst NavBar = () => {\r\n    return (\r\n        <AppBar style={{ background: \"white\" }} position=\"sticky\">\r\n            <Toolbar>\r\n                <Link to=\"/\" className=\"logo\">\r\n                    <img\r\n                        src=\"https://static.naukri.com/s/4/100/i/naukri_Logo.png\"\r\n                        alt=\"logo\"\r\n                    />\r\n                </Link>\r\n                <Link to=\"/new-job\">\r\n                    <Button\r\n                        startIcon={<AddIcon />}\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                    >\r\n                        post job\r\n                    </Button>\r\n                </Link>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Paper, Chip, TextField, MenuItem } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport SortIcon from \"@material-ui/icons/Sort\";\r\nimport WorkOutlineOutlinedIcon from \"@material-ui/icons/WorkOutlineOutlined\";\r\nimport AccountBalanceWalletOutlinedIcon from \"@material-ui/icons/AccountBalanceWalletOutlined\";\r\nimport LocationOnOutlinedIcon from \"@material-ui/icons/LocationOnOutlined\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        jobs: [],\r\n        loading: false,\r\n        sort: \"latest\",\r\n    };\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const { data } = await axios.get(process.env.REACT_APP_API_URL);\r\n            this.setState({ jobs: data });\r\n            setTimeout(() => this.setState({ loading: true }), 3000);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    handleSortBy = (e) => {\r\n        const { value } = e.target;\r\n        const jobs = this.state.jobs.reverse();\r\n        this.setState({ sort: value, jobs });\r\n    };\r\n\r\n    render() {\r\n        const { jobs, loading, sort } = this.state;\r\n        return (\r\n            <div className=\"home\">\r\n                <div className=\"sortby\">\r\n                    <SortIcon />\r\n                    <p style={{ fontWeight: \"500\", margin: \"0 5px\" }}>\r\n                        Sort by :\r\n                    </p>\r\n                    <TextField\r\n                        size=\"small\"\r\n                        onChange={this.handleSortBy}\r\n                        value={sort}\r\n                        select\r\n                    >\r\n                        <MenuItem value=\"relevant\">Relevant</MenuItem>\r\n                        <MenuItem value=\"latest\">Latest</MenuItem>\r\n                    </TextField>\r\n                </div>\r\n                <div className=\"flex container\">\r\n                    {loading ? (\r\n                        <React.Fragment>\r\n                            {jobs.map((job) => (\r\n                                <Paper key={job._id} className=\"job_container\">\r\n                                    <p className=\"job_title\">{job.title}</p>\r\n                                    <p className=\"job_company\">{job.company}</p>\r\n                                    <div className=\"job_details\">\r\n                                        <WorkOutlineOutlinedIcon />\r\n                                        <span>{job.experience} Yrs</span>\r\n                                        <AccountBalanceWalletOutlinedIcon />\r\n                                        <span>{job.salary} - PM</span>\r\n                                        <LocationOnOutlinedIcon />\r\n                                        <span>{job.location}</span>\r\n                                    </div>\r\n                                    <div className=\"job_description\">\r\n                                        <DescriptionOutlinedIcon />\r\n                                        <span>{job.description}</span>\r\n                                    </div>\r\n                                    <div style={{ flexWrap: \"wrap\" }}>\r\n                                        {job.skills.map((skill, index) => (\r\n                                            <Chip\r\n                                                style={{ margin: \"5px\" }}\r\n                                                label={skill}\r\n                                                key={index}\r\n                                                variant=\"outlined\"\r\n                                                size=\"small\"\r\n                                            ></Chip>\r\n                                        ))}\r\n                                    </div>\r\n                                </Paper>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <React.Fragment>\r\n                            {jobs.map((job) => (\r\n                                <Paper\r\n                                    key={job._id}\r\n                                    className=\"job_container\"\r\n                                    square\r\n                                >\r\n                                    <Skeleton\r\n                                        variant=\"rect\"\r\n                                        width=\"100%\"\r\n                                        height=\"20px\"\r\n                                    />\r\n                                    <Skeleton\r\n                                        varient=\"rect\"\r\n                                        width=\"100%\"\r\n                                        height=\"20px\"\r\n                                    />\r\n                                    <Skeleton\r\n                                        varient=\"rect\"\r\n                                        width=\"100%\"\r\n                                        height=\"20px\"\r\n                                    />\r\n                                    <Skeleton\r\n                                        varient=\"rect\"\r\n                                        width=\"100%\"\r\n                                        height=\"20px\"\r\n                                    />\r\n                                    <Skeleton\r\n                                        varient=\"rect\"\r\n                                        width=\"100%\"\r\n                                        height=\"20px\"\r\n                                    />\r\n                                </Paper>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { TextField, Chip, Button } from \"@material-ui/core\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\n\r\nclass Form extends Component {\r\n    state = { data: {} };\r\n\r\n    handleChange = ({ currentTarget: input }) => {\r\n        const data = { ...this.state.data };\r\n        data[input.name] = input.value;\r\n        this.setState({ data });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.doSubmit();\r\n    };\r\n\r\n    renderInput(\r\n        name,\r\n        label,\r\n        type,\r\n        placeholder,\r\n        className,\r\n        required,\r\n        multiline,\r\n        rows\r\n    ) {\r\n        const { data } = this.state;\r\n        return (\r\n            <TextField\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                name={name}\r\n                value={data[name]}\r\n                label={label}\r\n                type={type}\r\n                placeholder={placeholder}\r\n                required={required}\r\n                onChange={this.handleChange}\r\n                multiline={multiline}\r\n                rows={rows}\r\n                className={className}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderAutoCompleteInput(name, label, options) {\r\n        const { data } = this.state;\r\n        return (\r\n            <Autocomplete\r\n                multiple\r\n                value={data[name]}\r\n                onChange={(event, newValue) => {\r\n                    const originalData = { ...data };\r\n                    originalData[name] = newValue;\r\n                    this.setState({ data: originalData });\r\n                }}\r\n                options={options}\r\n                getOptionLabel={(option) => option}\r\n                renderTags={(tagValue, getTagProps) =>\r\n                    tagValue.map((option, index) => (\r\n                        <Chip label={option} {...getTagProps({ index })} />\r\n                    ))\r\n                }\r\n                className=\"textarea\"\r\n                renderInput={(params) => (\r\n                    <TextField {...params} label={label} variant=\"outlined\" />\r\n                )}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSubmitBtn(name) {\r\n        return (\r\n            <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                style={{ float: \"right\", margin: \"5px\" }}\r\n                type=\"submit\"\r\n            >\r\n                {name}\r\n            </Button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Form from \"./common/Form\";\r\nimport { toast } from \"react-toastify\";\r\nimport { Paper } from \"@material-ui/core\";\r\n\r\nconst options = [\r\n    \"Javascript\",\r\n    \"Python\",\r\n    \"React\",\r\n    \"Node\",\r\n    \"Django\",\r\n    \"AI\",\r\n    \"SQL\",\r\n    \"MongoDB\",\r\n    \"Java\",\r\n    \"Git\",\r\n];\r\n\r\nclass JobForm extends Form {\r\n    state = {\r\n        data: {\r\n            title: \"\",\r\n            company: \"\",\r\n            experience: \"\",\r\n            salary: \"\",\r\n            location: \"\",\r\n            description: \"\",\r\n            skills: [],\r\n        },\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            await axios.post(process.env.REACT_APP_API_URL, this.state.data);\r\n            toast.success(\"Job Posted Successfuly\");\r\n            window.location = \"/\";\r\n        } catch (error) {\r\n            if (error.response && error.response.status === 400) {\r\n                toast.error(error.response.data);\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: \"100%\", margin: \"30px 0\" }} className=\"flex\">\r\n                <Paper style={{ padding: \"10px\" }}>\r\n                    <form onSubmit={this.handleSubmit}>\r\n                        <h2 style={{ textAlign: \"center\" }}>POST NEW JOB</h2>\r\n                        <div className=\"form_inputs\">\r\n                            {this.renderInput(\r\n                                \"title\",\r\n                                \"Title\",\r\n                                \"text\",\r\n                                \"Ex: Web Developer\",\r\n                                \"input\",\r\n                                true\r\n                            )}\r\n                            {this.renderInput(\r\n                                \"company\",\r\n                                \"Company\",\r\n                                \"text\",\r\n                                \"Your Company Name\",\r\n                                \"input\",\r\n                                true\r\n                            )}\r\n                        </div>\r\n                        <div className=\"form_inputs\">\r\n                            {this.renderInput(\r\n                                \"experience\",\r\n                                \"Experience\",\r\n                                \"number\",\r\n                                \"Years only\",\r\n                                \"input\",\r\n                                true\r\n                            )}\r\n                            {this.renderInput(\r\n                                \"salary\",\r\n                                \"Salary\",\r\n                                \"number\",\r\n                                \"INR per month\",\r\n                                \"input\",\r\n                                true\r\n                            )}\r\n                        </div>\r\n                        {this.renderInput(\r\n                            \"description\",\r\n                            \"Job Description\",\r\n                            \"text\",\r\n                            \"Describes the general tasks, or other related duties, and responsibilities of a position\",\r\n                            \"textarea\",\r\n                            true,\r\n                            true,\r\n                            6\r\n                        )}\r\n                        {this.renderAutoCompleteInput(\r\n                            \"skills\",\r\n                            \"Key Skills\",\r\n                            options\r\n                        )}\r\n                        <div>\r\n                            {this.renderInput(\r\n                                \"location\",\r\n                                \"Location\",\r\n                                \"text\",\r\n                                \"Ex: Hyderabad\",\r\n                                \"input\",\r\n                                true\r\n                            )}\r\n                        </div>\r\n                        {this.renderSubmitBtn(\"Post\")}\r\n                    </form>\r\n                </Paper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JobForm;\r\n","const NotFound = () => {\r\n    return ( <h1>Not Found</h1> );\r\n}\r\n \r\nexport default NotFound;","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Home from \"./components/Home\";\nimport JobForm from \"./components/JobForm\";\nimport NotFound from \"./components/NotFound\";\nimport { ToastContainer } from \"react-toastify\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\nconst theme = createTheme({\n    palette: {\n        primary: {\n            main: \"#4A90E2\",\n        },\n    },\n});\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <ToastContainer />\n            <NavBar />\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/new-job\" component={JobForm} />\n                <Route path=\"/not-found\" component={NotFound} />\n                <Redirect to=\"/not-found\" />\n            </Switch>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}